basePath: /
definitions:
  Effective-Mobile_internal_db.Car:
    properties:
      id:
        example: 3
        type: integer
      mark:
        example: BMW
        type: string
      model:
        example: X5
        type: string
      owner_id:
        example: 1
        type: integer
      regnum:
        example: A111AA155
        type: string
      year:
        example: 2015
        type: integer
    type: object
  Effective-Mobile_internal_db.Owner:
    properties:
      id:
        example: 4
        type: integer
      name:
        example: Max
        type: string
      patronymic:
        example: Olegovich
        type: string
      surname:
        example: Shestakov
        type: string
    type: object
  Effective-Mobile_internal_db.StatusBadRequestMessage:
    properties:
      message:
        example: 'Error: bad request'
        type: string
    type: object
  Effective-Mobile_internal_db.StatusInternalServerErrorMessage:
    properties:
      message:
        example: 'Error: internal server error'
        type: string
    type: object
  Effective-Mobile_internal_db.StatusNotFoundMessage:
    properties:
      message:
        example: 'Error: not found'
        type: string
    type: object
  Effective-Mobile_internal_db.StatusOKMessage:
    properties:
      status:
        example: ok
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a RESTful API for Effective-Mobile project
  title: Effective-Mobile API
  version: "1.0"
paths:
  /cars:
    post:
      consumes:
      - application/json
      description: Add a new car to the database from JSON input.
      operationId: create-car
      parameters:
      - description: Car info (regnum, mark, model, owner_id are required).
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/Effective-Mobile_internal_db.Car'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusOKMessage'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusBadRequestMessage'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusNotFoundMessage'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusInternalServerErrorMessage'
      summary: Create car
      tags:
      - API Functions
  /cars/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a car from the database by ID.
      operationId: delete-car
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusOKMessage'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusBadRequestMessage'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusNotFoundMessage'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusInternalServerErrorMessage'
      summary: Delete car
      tags:
      - API Functions
    put:
      consumes:
      - application/json
      description: Update car info in the database by id.
      operationId: update-car
      parameters:
      - description: Change car info, ID and other one or more fields are required.
          If the field is empty, it will not be changed .
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/Effective-Mobile_internal_db.Car'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusOKMessage'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusBadRequestMessage'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusNotFoundMessage'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusInternalServerErrorMessage'
      summary: Update car
      tags:
      - API Functions
  /info:
    get:
      consumes:
      - application/json
      description: Get all cars from database or filtered by regnum, mark and model
        (optional). All filters should be written as query parameters.
      operationId: get-all-cars
      parameters:
      - description: Registration number
        in: query
        name: regnum
        type: string
      - description: Car mark
        in: query
        name: mark
        type: string
      - description: Car model
        in: query
        name: model
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusOKMessage'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusBadRequestMessage'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusNotFoundMessage'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusInternalServerErrorMessage'
      summary: Get cars
      tags:
      - API Functions
  /owners:
    post:
      consumes:
      - application/json
      description: Add a new owner to the database from JSON input body.
      operationId: add-owner
      parameters:
      - description: Owner info (only name, surname are required).
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/Effective-Mobile_internal_db.Owner'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusOKMessage'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusBadRequestMessage'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusNotFoundMessage'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/Effective-Mobile_internal_db.StatusInternalServerErrorMessage'
      summary: Add owner
      tags:
      - API Functions
swagger: "2.0"
