// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/cars": {
            "post": {
                "description": "Add a new car to the database from JSON input.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Functions"
                ],
                "summary": "Create car",
                "operationId": "create-car",
                "parameters": [
                    {
                        "description": "Car info (regnum, mark, model, owner_id are required).",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.Car"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusBadRequestMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        },
        "/cars/{id}": {
            "put": {
                "description": "Update car info in the database by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Functions"
                ],
                "summary": "Update car",
                "operationId": "update-car",
                "parameters": [
                    {
                        "description": "Change car info, ID and other one or more fields are required. If the field is empty, it will not be changed .",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.Car"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusBadRequestMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusInternalServerErrorMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a car from the database by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Functions"
                ],
                "summary": "Delete car",
                "operationId": "delete-car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusBadRequestMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        },
        "/info": {
            "get": {
                "description": "Get all cars from database or filtered by regnum, mark and model (optional). All filters should be written as query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Functions"
                ],
                "summary": "Get cars",
                "operationId": "get-all-cars",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Registration number",
                        "name": "regnum",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Car mark",
                        "name": "mark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Car model",
                        "name": "model",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusBadRequestMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        },
        "/owners": {
            "post": {
                "description": "Add a new owner to the database from JSON input body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Functions"
                ],
                "summary": "Add owner",
                "operationId": "add-owner",
                "parameters": [
                    {
                        "description": "Owner info (only name, surname are required).",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.Owner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusBadRequestMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/Effective-Mobile_internal_db.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Effective-Mobile_internal_db.Car": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "mark": {
                    "type": "string",
                    "example": "BMW"
                },
                "model": {
                    "type": "string",
                    "example": "X5"
                },
                "owner_id": {
                    "type": "integer",
                    "example": 1
                },
                "regnum": {
                    "type": "string",
                    "example": "A111AA155"
                },
                "year": {
                    "type": "integer",
                    "example": 2015
                }
            }
        },
        "Effective-Mobile_internal_db.Owner": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 4
                },
                "name": {
                    "type": "string",
                    "example": "Max"
                },
                "patronymic": {
                    "type": "string",
                    "example": "Olegovich"
                },
                "surname": {
                    "type": "string",
                    "example": "Shestakov"
                }
            }
        },
        "Effective-Mobile_internal_db.StatusBadRequestMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Error: bad request"
                }
            }
        },
        "Effective-Mobile_internal_db.StatusInternalServerErrorMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Error: internal server error"
                }
            }
        },
        "Effective-Mobile_internal_db.StatusNotFoundMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Error: not found"
                }
            }
        },
        "Effective-Mobile_internal_db.StatusOKMessage": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Effective-Mobile API",
	Description:      "This is a RESTful API for Effective-Mobile project",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
