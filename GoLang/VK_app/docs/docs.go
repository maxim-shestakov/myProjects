// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/filmlibrary/actors": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all actors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Functions"
                ],
                "summary": "GetAllActors",
                "operationId": "get-all-actors",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusUnauthorizedMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        },
        "/filmlibrary/admin/actor": {
            "put": {
                "security": [
                    {
                        "AdminKeyAuth": []
                    }
                ],
                "description": "Update an actor in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Functions"
                ],
                "summary": "UpdateActor",
                "operationId": "update-actor",
                "parameters": [
                    {
                        "description": "Actor object for updating",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.Actor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "actor was successfully updated",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusUnauthorizedMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusInternalServerErrorMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminKeyAuth": []
                    }
                ],
                "description": "Delete an actor from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Functions"
                ],
                "summary": "DeleteActor",
                "operationId": "delete-actor",
                "parameters": [
                    {
                        "description": "Actor object for deleting",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.Actor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "actor was successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusUnauthorizedMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        },
        "/filmlibrary/admin/actors": {
            "get": {
                "security": [
                    {
                        "AdminKeyAuth": []
                    }
                ],
                "description": "Get all actors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Functions"
                ],
                "summary": "GetAllActors",
                "operationId": "get-all-actors-admin",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusUnauthorizedMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusInternalServerErrorMessage"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminKeyAuth": []
                    }
                ],
                "description": "Add a new actor to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Functions"
                ],
                "summary": "AddActor",
                "operationId": "add-actor",
                "parameters": [
                    {
                        "description": "Actor object for adding",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.Actor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "actor was successfully added",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusUnauthorizedMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        },
        "/filmlibrary/admin/actorsfilms": {
            "post": {
                "security": [
                    {
                        "AdminKeyAuth": []
                    }
                ],
                "description": "Add a new actor film to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Functions"
                ],
                "summary": "AddActorFilm",
                "operationId": "add-actor-film",
                "parameters": [
                    {
                        "description": "ActorFilm object for adding",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.ActorFilm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "actor film was successfully added",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusUnauthorizedMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        },
        "/filmlibrary/admin/film": {
            "put": {
                "security": [
                    {
                        "AdminKeyAuth": []
                    }
                ],
                "description": "Update a film in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Functions"
                ],
                "summary": "UpdateFilm",
                "operationId": "update-film",
                "parameters": [
                    {
                        "description": "Film object for updating",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.Film"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "film was successfully updated",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusUnauthorizedMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusInternalServerErrorMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminKeyAuth": []
                    }
                ],
                "description": "Delete a film from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Functions"
                ],
                "summary": "DeleteFilm",
                "operationId": "delete-film",
                "parameters": [
                    {
                        "description": "Film object for deleting",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.Film"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusUnauthorizedMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        },
        "/filmlibrary/admin/films": {
            "post": {
                "security": [
                    {
                        "AdminKeyAuth": []
                    }
                ],
                "description": "Add a new film to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Functions"
                ],
                "summary": "AddFilm",
                "operationId": "add-film",
                "parameters": [
                    {
                        "description": "Film object for adding",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.Film"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "film was successfully added",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        },
        "/filmlibrary/admin/filmspiece": {
            "post": {
                "security": [
                    {
                        "AdminKeyAuth": []
                    }
                ],
                "description": "Get films based on a JSON fragment, which contains a piece of the film name or actor name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Functions"
                ],
                "summary": "GetFilmByPieceAdmin",
                "operationId": "get-film-by-piece-admin",
                "parameters": [
                    {
                        "description": "JSON fragment containing a piece of the film name or actor name to be searched for",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.JSONFragment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusUnauthorizedMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        },
        "/filmlibrary/admin/filmssorted": {
            "post": {
                "security": [
                    {
                        "AdminKeyAuth": []
                    }
                ],
                "description": "Get films sorted by rating, name, or date.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Functions"
                ],
                "summary": "GetSortedFilmsAdmin",
                "operationId": "get-sorted-films-admin",
                "parameters": [
                    {
                        "description": "key: rating, name, or date to be sorted by",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.KeySort"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusUnauthorizedMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        },
        "/filmlibrary/filmspiece": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get films based on a JSON fragment, which contains a piece of the film name or actor name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Functions"
                ],
                "summary": "GetFilmByPiece",
                "operationId": "get-film-by-piece",
                "parameters": [
                    {
                        "description": "JSON fragment with a piece of the film name or actor name to search for",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.JSONFragment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusUnauthorizedMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        },
        "/filmlibrary/filmssorted": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get films sorted by rating, name, or date.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Functions"
                ],
                "summary": "GetSortedFilms",
                "operationId": "get-sorted-films",
                "parameters": [
                    {
                        "description": "key: rating, name, or date to be sorted by",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.KeySort"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusUnauthorizedMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusInternalServerErrorMessage"
                        }
                    }
                }
            }
        },
        "/filmlibrary/login": {
            "post": {
                "description": "Login of a user or admin.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "login",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user was successfully logged in",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    }
                }
            }
        },
        "/filmlibrary/registration": {
            "post": {
                "description": "Registration of a new user or admin.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register",
                "operationId": "register",
                "parameters": [
                    {
                        "description": "register",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user was successfully registered",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusOKMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusBadRequestMessage"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/structures.StatusNotFoundMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "structures.Actor": {
            "type": "object",
            "properties": {
                "birthdate": {
                    "type": "string",
                    "example": "19970306"
                },
                "fathername": {
                    "type": "string",
                    "example": "Алексеевич"
                },
                "id": {
                    "type": "integer",
                    "example": 9
                },
                "name": {
                    "type": "string",
                    "example": "Сергей"
                },
                "sex": {
                    "type": "string",
                    "example": "m"
                },
                "surname": {
                    "type": "string",
                    "example": "Баранов"
                }
            }
        },
        "structures.ActorFilm": {
            "type": "object",
            "properties": {
                "actor_id": {
                    "type": "integer",
                    "example": 9
                },
                "film_id": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "structures.Film": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "example": "20161125"
                },
                "description": {
                    "type": "string",
                    "example": "Описание фильма"
                },
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "name": {
                    "type": "string",
                    "example": "Затмение"
                },
                "rating": {
                    "type": "number",
                    "example": 5.8
                }
            }
        },
        "structures.JSONFragment": {
            "type": "object",
            "properties": {
                "fragment": {
                    "type": "string",
                    "example": "иану"
                },
                "key": {
                    "type": "string",
                    "example": "actor"
                }
            }
        },
        "structures.KeySort": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "key"
                },
                "value": {
                    "type": "string",
                    "example": "name"
                }
            }
        },
        "structures.StatusBadRequestMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Error: bad request"
                }
            }
        },
        "structures.StatusInternalServerErrorMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Error: internal server error"
                }
            }
        },
        "structures.StatusNotFoundMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Error: not found"
                }
            }
        },
        "structures.StatusOKMessage": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "structures.StatusUnauthorizedMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Error: unauthorized"
                }
            }
        },
        "structures.User": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string",
                    "example": "john_doe"
                },
                "password": {
                    "type": "string",
                    "example": "psjfb10"
                },
                "role": {
                    "type": "integer",
                    "example": 1
                }
            }
        }
    },
    "securityDefinitions": {
        "AdminKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "VK Film library",
	Description:      "VK_app_film_library project",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
